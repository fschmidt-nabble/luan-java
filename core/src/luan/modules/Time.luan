-- incomplete, will add as needed

import "luan:String"
import "luan:Table"
import "luan:Java"
import "java:java.lang.System"
import "java:java.util.Calendar"
import "java:java.util.Date"
import "java:java.text.SimpleDateFormat"


function now()
	return System.currentTimeMillis()
end

-- add more as needed
local fields = {
	year = Calendar.YEAR;
	month = Calendar.MONTH;
	day_of_month = Calendar.DAY_OF_MONTH;
}

function get( time, ... )
	local cal = Calendar.getInstance()
	cal.setTimeInMillis(time)
	local rtn = {}
	for i, v in ipairs{...} do
		local fld = fields[v.lower()]
		fld or error("invalid field: "+v)
		local n = cal.get(fld)
		if fld == "month" then
			n = n + 1
		end
		rtn[i] = n
	end
	return Table.unpack(rtn)
end

function format(time,pattern)
	pattern = pattern or "yyyy-MM-dd HH:m:ss"
	return SimpleDateFormat.new(pattern).format(Date.new(time))
end

function on( year, month, day, hour, minute, second, millis )
	month = month - 1
	local cal = Calendar.getInstance()
	cal.set( year, month, day, hour or 0, minute or 0, second or 0 )
	cal.set( Calendar.MILLISECOND, millis or 0 )
	return cal.getTimeInMillis()
end

function parse( pattern, source )
	return SimpleDateFormat.new(pattern).parse(source).getTime()
end
	