import "java:luan.modules.BasicLuan"

assert = BasicLuan.assert_
assert_boolean = BasicLuan.assert_boolean
assert_nil = BasicLuan.assert_nil
assert_number = BasicLuan.assert_number
assert_string = BasicLuan.assert_string
assert_table = BasicLuan.assert_table
assert_integer = BasicLuan.assert_integer
assert_long = BasicLuan.assert_long
do_file = BasicLuan.do_file
error = BasicLuan.error
get_metatable = BasicLuan.get_metatable
ipairs = BasicLuan.ipairs
load = BasicLuan.load
load_file = BasicLuan.load_file
pairs = BasicLuan.pairs
range = BasicLuan.range
raw_equal = BasicLuan.raw_equal
raw_get = BasicLuan.raw_get
raw_len = BasicLuan.raw_len
raw_set = BasicLuan.raw_set
repr = BasicLuan.repr
set_metatable = BasicLuan.set_metatable
to_boolean = BasicLuan.to_boolean
to_number = BasicLuan.to_number
to_string = BasicLuan.to_string
type = BasicLuan.type
values = BasicLuan.values


import "luan:Package"
local Basic = _ENV

Package.global(Package,"require")
Package.global(Basic,"assert")
Package.global(Basic,"assert_boolean")
Package.global(Basic,"assert_nil")
Package.global(Basic,"assert_number")
Package.global(Basic,"assert_string")
Package.global(Basic,"assert_table")
Package.global(Basic,"assert_integer")
Package.global(Basic,"assert_long")
Package.global(Basic,"do_file")
Package.global(Basic,"error")
Package.global(Basic,"get_metatable")
Package.global(Basic,"ipairs")
Package.global(Basic,"load")
Package.global(Basic,"load_file")
Package.global(Basic,"pairs")
Package.global(Basic,"range")
Package.global(Basic,"raw_equal")
Package.global(Basic,"raw_get")
Package.global(Basic,"raw_len")
Package.global(Basic,"raw_set")
Package.global(Basic,"repr")
Package.global(Basic,"set_metatable")
Package.global(Basic,"to_boolean")
Package.global(Basic,"to_number")
Package.global(Basic,"to_string")
Package.global(Basic,"type")

do_file "classpath:luan/version.luan"
